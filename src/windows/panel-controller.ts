import {
  BrowserWindow, ipcMain,
} from 'electron';
import { repositionPanel } from './panel-utils';
import store from '../store';
import getComputedOsTheme from './get-os-theme';

// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const TRAY_WINDOW_WEBPACK_ENTRY: string;
declare const TRAY_WINDOW_PRELOAD_WEBPACK_ENTRY: string;

export interface IPanelSize {
  width: number,
  height: number,
  visible: boolean
}

const panelSize: IPanelSize = {
  width: 356,
  height: 200,
  visible: false,
};

let panelWindow: BrowserWindow;

// Set brightness panel state (visible or not)
export function showPanel() {
  panelSize.visible = true;

  panelWindow.restore();
  repositionPanel(panelWindow, panelSize);

  panelWindow.show();
  panelWindow.setAlwaysOnTop(true, 'modal-panel');
  panelWindow.focus();
  panelWindow.setOpacity(1);
}

export function hidePanel() {
  panelSize.visible = false;

  panelWindow.setAlwaysOnTop(false);
  panelWindow.minimize();
  panelWindow.setOpacity(0);
}

//  this function is from twinkle tray, attachResizeEvent();
ipcMain.on('panel-height', (event, height) => {
  const osTheme = getComputedOsTheme();

  panelSize.height = height;// + (osTheme === 'win11' ? 24 : 0);
  panelSize.width = 356 + (osTheme === 'win11' ? 24 : 0);

  if (panelSize.visible) {
    showPanel();
  }
});

export function createPanel(): BrowserWindow {
  panelWindow = new BrowserWindow({
    width: panelSize.width,
    height: panelSize.height,
    x: 0,
    y: 0,
    minHeight: 0,
    minWidth: 0,

    backgroundColor: '#00000000',
    transparent: true,

    frame: false,
    show: false,
    alwaysOnTop: false,
    skipTaskbar: true,
    resizable: false,
    type: 'toolbar',
    title: 'Home Assistant Menu Flyout',
    maximizable: false,
    minimizable: false,
    webPreferences: {
      preload: TRAY_WINDOW_PRELOAD_WEBPACK_ENTRY,

      // Non default values
      spellcheck: false,
      webgl: false,
      enableWebSQL: false,
    },
  });

  // and load the index.html of the app.
  panelWindow.loadURL(TRAY_WINDOW_WEBPACK_ENTRY);

  panelWindow.on('blur', () => {
    if (!store.get('settings').development.keepTrayWindowOpen) {
      hidePanel();
    }
  });

  return panelWindow;
}
