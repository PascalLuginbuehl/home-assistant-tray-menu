import { BrowserWindow, app, ipcMain } from 'electron';
import { repositionPanel } from './panel-utils';
import store from '../store';

// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const TRAY_WINDOW_WEBPACK_ENTRY: string;
declare const TRAY_WINDOW_PRELOAD_WEBPACK_ENTRY: string;

export interface IPanelSize {
  width: number,
  height: number,
  taskbar: ITaskbarPosition | null,
  base: number
  visible: boolean
  bounds: Electron.Rectangle | null
}

export type TaskbarPositionsEnum = 'LEFT' | 'TOP' | 'RIGHT' | 'BOTTOM';
export interface ITaskbarPosition {
  position: TaskbarPositionsEnum,
  gap: number
}

const panelSize: IPanelSize = {
  width: 356,
  height: 500,
  base: 0,
  visible: false,
  taskbar: null,
  bounds: null,
};

let panelWindow: BrowserWindow;

// Set brightness panel state (visible or not)
export function showPanel() {
  panelWindow.restore();

  repositionPanel(panelWindow, panelSize);

  panelSize.visible = true;

  // this.panelSize.bounds = screen.dipToScreenRect(this.panelWindow, this.panelWindow.getBounds());
  panelSize.bounds = panelWindow.getBounds();

  // Bottom, left, right
  panelWindow.show();
  panelWindow.setBounds(panelSize.bounds);

  panelWindow.setAlwaysOnTop(true, 'modal-panel');
  panelWindow.focus();

  panelWindow.setOpacity(1);
  panelWindow.show();
}

export function hidePanel() {
  // Hide panel
  panelWindow.setAlwaysOnTop(false);
  panelSize.visible = false;

  panelWindow.minimize();
  panelWindow.setOpacity(0);
  // startHidePanel()
}

function attachResizeEvent() {
  ipcMain.on('panel-height', (event, height) => {
    panelSize.height = height; // + (settings?.isWin11 ? 24 : 0)
    panelSize.width = 356; // + (settings?.isWin11 ? 24 : 0)
    if (panelSize.visible) {
      showPanel();
    }
  });
}

export function createPanel(): BrowserWindow {
  panelWindow = new BrowserWindow({
    width: panelSize.width,
    height: panelSize.height,
    x: 0,
    y: 0,
    minHeight: 0,
    minWidth: 0,

    backgroundColor: '#00000000',
    transparent: true,

    frame: false,
    show: false,
    alwaysOnTop: false,
    skipTaskbar: true,
    resizable: false,
    type: 'toolbar',
    title: 'Home Assistant Menu Flyout',
    maximizable: false,
    minimizable: false,
    webPreferences: {
      preload: TRAY_WINDOW_PRELOAD_WEBPACK_ENTRY,

      // Non default values
      spellcheck: false,
      webgl: false,
      enableWebSQL: false,
    },
  });

  if (!app.isPackaged) {
    // create enough space for dev tools
    panelWindow.webContents.on('devtools-opened', () => {
      panelSize.height = 500; // + (settings?.isWin11 ? 24 : 0)
      showPanel();
    });
  }

  // and load the index.html of the app.
  panelWindow.loadURL(TRAY_WINDOW_WEBPACK_ENTRY);

  panelWindow.on('blur', () => {
    if (!store.get('settings').development.keepTrayWindowOpen) {
      hidePanel();
    }
  });

  attachResizeEvent();

  return panelWindow;
}
